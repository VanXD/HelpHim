<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanxd.data.mapper.article.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.vanxd.data.entity.article.Article">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="creator_user_id" jdbcType="CHAR" property="creatorUserId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.vanxd.data.entity.article.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="VOResultMap" type="com.vanxd.data.entity.article.Article">
    <result column="creator_nickname" jdbcType="VARCHAR" property="creatorNickname" />
  </resultMap>


  <sql id="Base_Column_List">
    id, title, creator_user_id, status, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.vanxd.data.entity.article.Article">
    insert into article (id, title, creator_user_id, 
      status, create_time, content
      )
    values (#{id,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{creatorUserId,jdbcType=CHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vanxd.data.entity.article.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="creatorUserId != null">
        creator_user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserId != null">
        #{creatorUserId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vanxd.data.entity.article.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorUserId != null">
        creator_user_id = #{creatorUserId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vanxd.data.entity.article.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      creator_user_id = #{creatorUserId,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vanxd.data.entity.article.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      creator_user_id = #{creatorUserId,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>

  <sql id="VO_Column_List">
    a.id, a.title, a.creator_user_id, a.status, a.create_time,
    su.nickname
  </sql>
  <!-- 公共查询条件 -->
  <sql id="Common-Conditions">
    <where>
      AND a.status != -9
    </where>
  </sql>

  <!--分页查询记录-->
  <select id="page" resultMap="VOResultMap" >
    SELECT
    <include refid="VO_Column_List"></include>
    FROM
    article a
    JOIN sys_user su ON su.id = a.creator_user_id
    <include refid="page.Where-Condition"/>
    ORDER BY
    a.create_time DESC
    <include refid="page.limit"/>
  </select>

  <!-- 获取未删除的所有的记录 -->
  <select id="count" resultType="long">
    SELECT
    count(1)
    FROM
    article a
    JOIN sys_user su ON su.id = a.creator_user_id
    <include refid="page.Where-Condition"/>
  </select>
</mapper>